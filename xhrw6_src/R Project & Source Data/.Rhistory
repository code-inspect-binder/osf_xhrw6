Measures <- Measures %>%
mutate_at(vars(contains("ACEs")), ~ifelse(. == 2, 0, .)) %>%  # (Not sure exactly how this code works, but it does)
mutate(ACEs_Sum = structure(rowSums(select(., ACEs_1:ACEs_10), na.rm=TRUE), label = "ACEs Composite (Sum)"))
sjmisc::descr(Measures, Measures$ACEs_Sum, out = "v")
ggplot(Measures, aes(ACEs_Sum)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(contains("ACEs")) %>% select(-ACEs_Sum) )
# ~ Basic Needs - Childhood ----
# For the basic needs scales, the original scale development included two sub-scales, known as "Basic Needs Effectance" (11 items)
# and "Basic Needs Discouragement" (8 items). Darcia has said that prior work has shown that these two sub-scales tend to behave slightly
# differently in regressions and that it is best to consider them separately. However, I also want to examine the effects of individual
# needs within the scale (belonging, purpose, etc.), and because of many of the those would be single items if considered separately
# (e.g., autonomy effectance), I think I will reverse-score the discouragement items and create mean scores when considering
# each individual need. (You'll notice I had originally calculated effectance and discouragement for individual needs.)
Measures <- Measures %>%
mutate(BNSSh_Eff_Mean = structure(rowMeans(select(., BNSSh_1:BNSSh_11), na.rm=TRUE), label = "Basic Needs History Effectance Composite"),
BNSSh_Dis_Mean = structure(rowMeans(select(., BNSSh_12:BNSSh_19), na.rm=TRUE), label = "Basic Needs History Discouoragement Composite")) %>%
# mutate(BNSSh_Belonging_Eff = structure(rowMeans(select(., BNSSh_1:BNSSh_2), na.rm=TRUE), label = "Basic Needs History Effectance - Belonging"),
#        BNSSh_Control_Eff = structure(rowMeans(select(., BNSSh_3:BNSSh_4), na.rm=TRUE), label = "Basic Needs History Effectance - Control"),
#        BNSSh_Competence_Eff = structure(BNSSh_5, label = "Basic Needs History Effectance - Competence"),
#        BNSSh_Autonomy_Eff = structure(BNSSh_6, label = "Basic Needs History Effectance - Autonomy"),
#        BNSSh_Trust_Eff = structure(rowMeans(select(., BNSSh_7:BNSSh_8), na.rm=TRUE), label = "Basic Needs History Effectance - Trust"),
#        BNSSh_Purpose_Eff = structure(BNSSh_9, label = "Basic Needs History Effectance - Purpose"),
#        BNSSh_Enhancement_Eff = structure(BNSSh_10, label = "Basic Needs History Effectance - Self-enhancement"),
#        BNSSh_Satisf_Eff = structure(BNSSh_11, label = "Basic Needs History Effectance - Satisfaction"),
#
#        BNSSh_Belonging_Disc = structure(BNSSh_12, label = "Basic Needs History Discouragement - Belonging"),
#        BNSSh_Control_Disc = structure(BNSSh_13, label = "Basic Needs History Discouragement - Control"),
#        BNSSh_Competence_Disc = structure(BNSSh_14, label = "Basic Needs History Discouragement - Competence"),
#        BNSSh_Autonomy_Disc = structure(BNSSh_15, label = "Basic Needs History Discouragement - Autonomy"),
#        BNSSh_Trust_Disc = structure(BNSSh_16, label = "Basic Needs History Discouragement - Trust"),
#        BNSSh_Purpose_Disc = structure(BNSSh_17, label = "Basic Needs History Discouragement - Purpose"),
#        BNSSh_Enhancement_Disc = structure(BNSSh_18, label = "Basic Needs History Discouragement - Self-enhancement"),
#        BNSSh_Satisf_Disc = structure(BNSSh_19, label = "Basic Needs History Discouragement - Satisfaction"))  %>%
mutate(BNSSh_12_R = 6 - BNSSh_12,
BNSSh_13_R = 6 - BNSSh_13,
BNSSh_14_R = 6 - BNSSh_14,
BNSSh_15_R = 6 - BNSSh_15,
BNSSh_16_R = 6 - BNSSh_16,
BNSSh_17_R = 6 - BNSSh_17,
BNSSh_18_R = 6 - BNSSh_18,
BNSSh_19_R = 6 - BNSSh_19) %>%
mutate(BNSSh_Belonging = structure(rowMeans(select(., BNSSh_1,BNSSh_2,BNSSh_12_R), na.rm=TRUE), label = "Basic Needs History - Belonging"),
BNSSh_Control = structure(rowMeans(select(., BNSSh_3,BNSSh_4,BNSSh_13_R), na.rm=TRUE), label = "Basic Needs History - Control"),
BNSSh_Competence = structure(rowMeans(select(., BNSSh_5,BNSSh_14_R), na.rm=TRUE), label = "Basic Needs History - Competence"),
BNSSh_Autonomy = structure(rowMeans(select(., BNSSh_6,BNSSh_15_R), na.rm=TRUE), label = "Basic Needs History - Autonomy"),
BNSSh_Trust = structure(rowMeans(select(., BNSSh_7,BNSSh_8,BNSSh_16_R), na.rm=TRUE), label = "Basic Needs History - Trust"),
BNSSh_Purpose = structure(rowMeans(select(., BNSSh_9,BNSSh_17_R), na.rm=TRUE), label = "Basic Needs History - Purpose"),
BNSSh_Enhancement = structure(rowMeans(select(., BNSSh_10,BNSSh_18_R), na.rm=TRUE), label = "Basic Needs History - Self-enhancement"),
BNSSh_Satisf = structure(rowMeans(select(., BNSSh_11,BNSSh_19_R), na.rm=TRUE), label = "Basic Needs History - Satisfaction"))
sjmisc::descr(Measures, Measures$BNSSh_Eff_Mean, out = "v")
ggplot(Measures, aes(BNSSh_Eff_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(BNSSh_1:BNSSh_11))
sjmisc::descr(Measures, Measures$BNSSh_Dis_Mean, out = "v")
ggplot(Measures, aes(BNSSh_Dis_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(BNSSh_12:BNSSh_19))
# ~ Perceived Discrimination (two mean composite scores)----
# Major Discrimination
Measures <- Measures %>%
# Re-code original values to 0,1, and then calculate a sum
mutate_at(vars(contains("Discrim_Major")), function(x) case_when(x == 1 ~ 1, x == 2 ~ 0)) %>%
mutate(Discrim_Major_Sum = structure(rowSums(select(., Discrim_Major_1:Discrim_Major_7), na.rm=TRUE),
label = "Major Discrimination Sum"))
sjmisc::frq(Measures$Discrim_Major_Sum, out = "v")
ggplot(Measures, aes(Discrim_Major_Sum)) + geom_histogram(binwidth=1)
sjmisc::descr(Measures, Measures$Discrim_Major_Sum, out = "v")
psych::alpha(Measures %>% select(contains("Discrim_Major")) %>% select(-Discrim_Major_Sum) )
# Let's take a closer look at the two cases who reported all 7 types of major discrimination; are they serious cases?
# (UPDATE: They seem to be).
Test  <- Measures %>%
filter(Discrim_Major_Sum == 7)
rm(Test)
# Everyday Discrimination
Measures <- Measures %>%
mutate(Discrim_Everyday_Mean = structure(rowMeans(select(., Discrim_Everyday_1:Discrim_Everyday_9), na.rm=TRUE),
label = "Everyday Discrimination Composite"))
sjmisc::descr(Measures, Measures$Discrim_Everyday_Mean, out = "v")
ggplot(Measures, aes(Discrim_Everyday_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(contains("Discrim_Everyday")) %>% select(-Discrim_Everyday_Mean) )
# ~ Multicultural Experience ----
# NOTE: For this measure, I am using as a reference the following:
#             Narvaez, D., Endicott, L., & Hill, P. (2009). Guide for using the Multicultural Experiences Questionnaire (MEQ):
#             For college students and adults. South Bend, IN: Moral Psychology Laboratory, University of Notre Dame.
#
#       That document matches the questions in this measure, and it includes scoring instructions (p. 3). Note, however, that
#       the item numbers get a little funky, because the reference has some sub-items written with the same item #, but with a, b, etc.
#       Those items aren't included in the official scoring. However, those items are distinct question numbers in Qualtrics, which means
#       that the question number ordering gets thrown off. So, this code needs to be written carefully...Instead of renumbering everything,
#       I'm going to match the scoring document to MY question numbers.
Measures <- Measures %>%
# Create new sub-scales
mutate(MEXQ_Exp = structure(rowSums(select(., MEXQ1_1, MEXQ3_1, MEXQ4_1, MEXQ5_1, MEXQ8_1, MEXQ9_1, MEXQ10_1, MEXQ11_1, MEXQ11_2),
na.rm=TRUE), label = "Multicultural Experience"),
MEXQ_Desire = structure(rowSums(select(., MEXQ2_1, MEXQ7_1, MEXQ8_2, MEXQ8_3, MEXQ8_4, MEXQ8_5),
na.rm=TRUE), label = "Multicultural Desire"),
# Calculate composite
MEQ_Total = structure(MEXQ_Exp + MEXQ_Desire, label = "MEQ Composite (Sum)"))
sjmisc::descr(Measures, Measures$MEQ_Total, out = "v")
ggplot(Measures, aes(MEQ_Total)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(contains("MEXQ")) %>% select(-MEXQ_Exp, -MEXQ_Desire) )
psych::alpha(Measures %>% select(MEXQ1_1, MEXQ3_1, MEXQ4_1, MEXQ5_1, MEXQ8_1, MEXQ9_1, MEXQ10_1, MEXQ11_1, MEXQ11_2))
# ~ Basic Needs - Adult----
# (SEE NOTES ABOVE FOR THE CHILDHOOD VERSION OF THIS SCALE, BNSSh)
Measures <- Measures %>%
mutate(BNSS_Eff_Mean = structure(rowMeans(select(., BNSS_1:BNSS_11), na.rm=TRUE), label = "Basic Needs Effectance Composite"),
BNSS_Dis_Mean = structure(rowMeans(select(., BNSS_12:BNSS_19), na.rm=TRUE), label = "Basic Needs Discouoragement Composite")) %>%
# mutate(BNSS_Belonging_Eff = structure(rowMeans(select(., BNSS_1:BNSS_2), na.rm=TRUE), label = "Basic Needs Effectance - Belonging"),
#        BNSS_Control_Eff = structure(rowMeans(select(., BNSS_3:BNSS_4), na.rm=TRUE), label = "Basic Needs Effectance - Control"),
#        BNSS_Competence_Eff = structure(BNSS_5, label = "Basic Needs Effectance - Competence"),
#        BNSS_Autonomy_Eff = structure(BNSS_6, label = "Basic Needs Effectance - Autonomy"),
#        BNSS_Trust_Eff = structure(rowMeans(select(., BNSS_7:BNSS_8), na.rm=TRUE), label = "Basic Needs Effectance - Trust"),
#        BNSS_Purpose_Eff = structure(BNSS_9, label = "Basic Needs Effectance - Purpose"),
#        BNSS_Enhancement_Eff = structure(BNSS_10, label = "Basic Needs Effectance - Self-enhancement"),
#        BNSS_Satisf_Eff = structure(BNSS_11, label = "Basic Needs Effectance - Satisfaction"),
#
#        BNSS_Belonging_Disc = structure(BNSS_12, label = "Basic Needs Discouragement - Belonging"),
#        BNSS_Control_Disc = structure(BNSS_13, label = "Basic Needs Discouragement - Control"),
#        BNSS_Competence_Disc = structure(BNSS_14, label = "Basic Needs Discouragement - Competence"),
#        BNSS_Autonomy_Disc = structure(BNSS_15, label = "Basic Needs Discouragement - Autonomy"),
#        BNSS_Trust_Disc = structure(BNSS_16, label = "Basic Needs Discouragement - Trust"),
#        BNSS_Purpose_Disc = structure(BNSS_17, label = "Basic Needs Discouragement - Purpose"),
#        BNSS_Enhancement_Disc = structure(BNSS_18, label = "Basic Needs Discouragement - Self-enhancement"),
#        BNSS_Satisf_Disc = structure(BNSS_19, label = "Basic Needs Discouragement - Satisfaction"))  %>%
mutate(BNSS_12r = 6 - BNSS_12,
BNSS_13r = 6 - BNSS_13,
BNSS_14r = 6 - BNSS_14,
BNSS_15r = 6 - BNSS_15,
BNSS_16r = 6 - BNSS_16,
BNSS_17r = 6 - BNSS_17,
BNSS_18r = 6 - BNSS_18,
BNSS_19r = 6 - BNSS_19) %>%
mutate(BNSS_Belonging = structure(rowMeans(select(., BNSS_1,BNSS_2,BNSS_12r), na.rm=TRUE), label = "Basic Needs - Belonging"),
BNSS_Control = structure(rowMeans(select(., BNSS_3,BNSS_4,BNSS_13r), na.rm=TRUE), label = "Basic Needs - Control"),
BNSS_Competence = structure(rowMeans(select(., BNSS_5,BNSS_14r), na.rm=TRUE), label = "Basic Needs - Competence"),
BNSS_Autonomy = structure(rowMeans(select(., BNSS_6,BNSS_15r), na.rm=TRUE), label = "Basic Needs - Autonomy"),
BNSS_Trust = structure(rowMeans(select(., BNSS_7,BNSS_8,BNSS_16r), na.rm=TRUE), label = "Basic Needs - Trust"),
BNSS_Purpose = structure(rowMeans(select(., BNSS_9,BNSS_17r), na.rm=TRUE), label = "Basic Needs - Purpose"),
BNSS_Enhancement = structure(rowMeans(select(., BNSS_10,BNSS_18r), na.rm=TRUE), label = "Basic Needs - Self-enhancement"),
BNSS_Satisf = structure(rowMeans(select(., BNSS_11,BNSS_19r), na.rm=TRUE), label = "Basic Needs - Satisfaction"))
sjmisc::descr(Measures, Measures$BNSS_Eff_Mean, out = "v")
ggplot(Measures, aes(BNSS_Eff_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(BNSS_1:BNSS_11))
sjmisc::descr(Measures, Measures$BNSS_Dis_Mean, out = "v")
ggplot(Measures, aes(BNSS_Dis_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(BNSS_12:BNSS_19))
# ~ Critical Reflection ----
# Reverse-code necessary items so that all items have higher scores indicating higher critical reflection.
# NOTE: That because there are a lot of items needing reverse-coding, I'm opting to do it the LESS clean way
#       (by replacing existing values). At some point, you may want to come back and revise this.
# (See: Shin, R. Q., Ezeofor, I., Smith, L. C., Welch, J. C., & Goodrich, K. M. (2016). The development and validation
#       of the Contemporary Critical Consciousness Measure. Journal of Counseling Psychology, 63(2), 210.)
#
# NOTE: We'll also first create a system-justification-only composite, because I'd like to do some follow-up analyses just on
# those items.
Measures <- Measures %>%
mutate(System_Justif_Mean = structure(rowMeans(select(., Crit_Reflection2_1:Crit_Reflection2_3),
na.rm=TRUE), label = "System Justification Composite"))  %>%
mutate(Crit_Reflection1_1 = 8 - Crit_Reflection1_1,
Crit_Reflection1_2 = 8 - Crit_Reflection1_2,
Crit_Reflection1_3 = 8 - Crit_Reflection1_3,
Crit_Reflection1_4 = 8 - Crit_Reflection1_4,
Crit_Reflection1_5 = 8 - Crit_Reflection1_5,
Crit_Reflection1_6 = 8 - Crit_Reflection1_6,
Crit_Reflection1_7 = 8 - Crit_Reflection1_7,
Crit_Reflection1_8 = 8 - Crit_Reflection1_8,
Crit_Reflection1_13 = 8 - Crit_Reflection1_13,
Crit_Reflection2_1 = 8 - Crit_Reflection2_1,
Crit_Reflection2_2 = 8 - Crit_Reflection2_2,
Crit_Reflection2_3 = 8 - Crit_Reflection2_3)
#Also, Since I'm combining two different measures here, let's first make sure all those items hang together:
psych::alpha(Measures %>% select(contains("Crit_Reflection1")))
psych::alpha(Measures %>% select(contains("Crit_Reflection2")))
psych::alpha(Measures %>% select(contains("Crit_Reflection")))
# Since they do, we can go ahead and create the composite. However, we'll create two versions
# (one with the System Justification items and one without them).
Measures <- Measures %>%
mutate(Crit_Reflection_Sub = structure(rowMeans(select(., Crit_Reflection1_1:Crit_Reflection1_19),
na.rm=TRUE), label = "Critical Reflection Sub-Composite (No System Justification ItemS"),
Crit_Reflection_Mean = structure(rowMeans(select(., Crit_Reflection1_1:Crit_Reflection1_19,Crit_Reflection2_1:Crit_Reflection2_3),
na.rm=TRUE), label = "Critical Reflection Composite"))
sjmisc::descr(Measures, Measures$Crit_Reflection_Mean, out = "v")
ggplot(Measures, aes(Crit_Reflection_Mean)) + geom_histogram(binwidth=1)
ggplot(Measures, aes(System_Justif_Mean)) + geom_histogram(binwidth=1)
rcorr(as.matrix(Measures[,c("Crit_Reflection_Mean","System_Justif_Mean")]), type="pearson")
# The system justification mean has some positive skew. Just for the heck of it, let's explore
# some transformations to see if they help:
ggplot(Measures, aes(x=1, y=System_Justif_Mean)) + geom_violin(trim=FALSE) + geom_boxplot(width=0.1) +
stat_summary(fun=mean, geom="point", shape=23, size=2)
symbox(~ System_Justif_Mean, data=Measures)
ggplot(Measures, aes(x=1, y=log(System_Justif_Mean))) + geom_violin(trim=FALSE) + geom_boxplot(width=0.1) +
stat_summary(fun=mean, geom="point", shape=23, size=2)
ggplot(Measures, aes(log(System_Justif_Mean))) + geom_histogram(binwidth=.5)
# ~ Sociopolitical Efficacy ----
# Note that the items in this measure were changed between pilot and production. The measure is now a combination of four
# "internal political efficacy" items referred to in Morrell (2003) and two additional items that I created (with Darcia's help).
# None of these items require reverse-coding, and higher scores indicate higher efficacy.
Measures <- Measures %>%
mutate(Efficacy_Mean = structure(rowMeans(select(., Efficacy_1:Efficacy_6), na.rm=TRUE), label = "Political Efficacy Composite"))
psych::alpha(Measures %>% select(contains("Efficacy")) %>% select(-Efficacy_Mean))
sjmisc::descr(Measures, Measures$Efficacy_Mean, out = "v")
ggplot(Measures, aes(Efficacy_Mean)) + geom_histogram(binwidth=1)
# ~ Critical Action ----
# NOTE: This measure was adapted from Diemer, M. A., Rapa, L. J., Park, C. J., & Perry, J. C. (2017).
#                                    Development and validation of the Critical Consciousness Scale. Youth & Society, 49(4), 461-483.
# It is the ""Critical Action: Sociopolitical Participation" sub-scale from that publication.
# Note, though, another slight difference from the pilot study. The word "justice" or "social justice" was added on many of the items.
Measures <- Measures %>%
mutate(Crit_Action_Mean = structure(rowMeans(select(., Crit_Action_1:Crit_Action_9), na.rm=TRUE), label = "Critical Action Composite"))
sjmisc::descr(Measures, Measures$Crit_Action_Mean, out = "v")
ggplot(Measures, aes(Crit_Action_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(contains("Crit_Action")) %>% select(-Crit_Action_Mean) )
# While we're here, let's look at the distribution of BLM Activism
ggplot(Measures, aes(BLM_Activism)) + geom_histogram(binwidth=1)
# Note: Both activism measures have positive skew in the distribution (unsurprising)
# ~ Dialecticism and Zero-Sum Thinking ----
Measures <- Measures %>%
mutate(Dialectical_1 = 8 - Dialectical_1,
Dialectical_3 = 8 - Dialectical_3,
Dialectical_5 = 8 - Dialectical_5) %>%
mutate(Dialectical_Mean = structure(rowMeans(select(., Dialectical_1:Dialectical_6), na.rm=TRUE), label = "Dialecticism Composite")) %>%
mutate(Zero_Sum_Mean = structure(rowMeans(select(., Zero_Sum_1:Zero_Sum_4), na.rm=TRUE), label = "Zero-Sum Thinking Composite"))
psych::alpha(Measures %>% select(contains("Dialectical")) %>% select(-Dialectical_Mean) )
rcorr(as.matrix(Measures[,c("Dialectical_1","Dialectical_2")]), type="pearson")
psych::alpha(Measures %>% select(contains("Zero_Sum")) %>% select(-Zero_Sum_Mean) )
# ~ Violence and Militarism Attitudes ----
# NOTE: For the two violence attitudes questions, they are single-item questions related to whether violence is viewed as
# effective and morally justified. The militarism scale was taken from the "Militaristic Attitudes" questionnaire in:
#   Nelson, L. L., & Milburn, T. W. (1999). Relationships between problem-solving competencies and militaristic attitudes:
#   Implications for peace education. Peace and Conflict, 5(2), 149-168.
Measures <- Measures %>%
# Reverse-code necessary items
mutate(Militarism_5 = 8 - Militarism_5,
Militarism_6 = 8 - Militarism_6,
Militarism_7 = 8 - Militarism_7,
Militarism_8 = 8 - Militarism_8,
Militarism_9 = 8 - Militarism_9,
Militarism_10 = 8 - Militarism_10) %>%
mutate(Militarism_Mean = structure(rowMeans(select(., Militarism_1:Militarism_11), na.rm=TRUE), label = "Militarism Composite"))
sjmisc::descr(Measures, Measures$Violence_Just, out = "v")
ggplot(Measures, aes(Violence_Just)) + geom_histogram(binwidth=1)
sjmisc::descr(Measures, Measures$Violence_Effective, out = "v")
ggplot(Measures, aes(Violence_Effective)) + geom_histogram(binwidth=1)
sjmisc::descr(Measures, Measures$Militarism_Mean, out = "v")
ggplot(Measures, aes(Militarism_Mean)) + geom_histogram(binwidth=1)
psych::alpha(Measures %>% select(contains("Militarism")) %>% select(-Militarism_Mean) )
# Let's see how the alpha looks if we add our two single-item measures:
rcorr(as.matrix(Measures %>% select(contains("Militarism"), Violence_Just, Violence_Effective, -Militarism_Mean)), type="pearson")
# Interestingly, those two items on violence are basically uncorrelated with the militarism measure! (Though they are highly correlated
# with each other.) Not sure why that's the case...
# ~ Social Desirability ----
Measures <- Measures %>%
mutate(Militarism_Mean = structure(rowMeans(select(., Militarism_1:Militarism_11), na.rm=TRUE), label = "Militarism Composite"))
# Before moving on, let's also make sure that all demographic variables we want to treat as categorical are factored
# so that we don't accidentally treat them as continuous (note that I'm leaving income and education variables as continuous)
Measures$Gender <- as_factor(Measures$Gender)
Measures$Trans <- as_factor(Measures$Trans)
Measures$Ethnicity <- as_factor(Measures$Ethnicity)
Measures$Race <- as_factor(Measures$Race)
Measures$Disability <- as_factor(Measures$Disability)
Measures$Sexual <- as_factor(Measures$Sexual)
# Descriptives of Composites-----------------------------------------------------------------------------------------------------------------
# Here we are going to generate and export a descriptive statistics summary of our measures. I'm going to experiment with a couple of
# different ways of doing it. First, I'll use a combination of the gt package with the "describe" function in the psych package. Then,
# as an alternative, I'm going to try the "gtsummary" package and tbl_summary function, which promises to be a more integrated
# (and flexible) approach.
# colnames(Measures)
# Approach #1
Descriptives2 <- Measures %>%
select(Age,Gender,Adj_Income,Parent_Edu,LowStatus,Political,ACEs_Sum,EDNhComp,Discrim_Major_Sum,Discrim_Everyday_Mean,MEXQ_Exp,
Crit_Reflection_Mean,Efficacy_Mean,Crit_Action_Mean,BLM_Activism, Militarism_Mean) %>%
psych::describe() %>%
as.data.frame() %>%
rownames_to_column(var="Measure") %>%
select(-vars) #%>%
names(Measures)
sjmisc::frq(Measures$Race, out = "v")
t.test(Measures$BLM_Activism~Measures$Race, data=Measures %>% filter(Race %in% c(1,2)))
Measures %>% filter(Race %in% c(1,2)) %>%
t.test(BLM_Activism~$Race)
Measures %>% filter(Race %in% c(1,2)) %>%
t.test(BLM_Activism~Race)
Measures %>% filter(Race %in% c(1,2)) %>%
t.test(BLM_Activism~Race)
Measures %>% filter(Race %in% c(1,2))
Measures %>% filter(Race %in% c("Black or African-American","White or Caucasian")) %>%
t.test(BLM_Activism~Race)
Measures %>% filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism)) %>%
t.test(BLM_Activism~Race)
data %>% Measures %>%
filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism))
data <- Measures %>%
filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism))
View(data)
data <- Measures %>%
filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism)) %>%
t.test(data$BLM_Activism~data$Race)
data <- Measures %>%
filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism)) %>%
t.test(data$BLM_Activism~as.factor(data$Race))
data <- Measures %>%
filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism)) %>%
mutate(Black = ifelse(Race == "Black or African-American", 1,0))
t.test(data$BLM_Activism~data$Black)
Measures %>%
group_by(Race) %>%
summarise(BLM_Mean = mean(BLM_Activism))
library(here)
library(readxl)
library(haven)
library(Hmisc)
library(descr)
library(UpSetR)
library(tidyverse)
library(lubridate)
library(psych)
library(car)
library(ggpubr)
library(corrplot)
library(xtable)
library(sjmisc)
library(sjPlot)
library(lavaan)
library(semTools)
library(tidySEM)
library(semTable)
library(mice)
library(Amelia)
library(lm.beta)
library(stargazer)
# Load APA Style function for formatting tables
source(here("Functions", "corstars.R"))
# Import Data------------------------------------------------------------------------------------------------------------------------
# Import the SPSS data (N = 361)
RawData <-  read_spss(here("Source Data","Critical_Consciousness_Prolific_Data_Raw.sav")) %>%
mutate(id = PROLIFIC_PID)
# To re-create a kind of "variable view," we'll save off the variable labels (not the code frames, but just labels):
RawData.labels <- as.data.frame(lapply(RawData, function(x) attributes(x)$label)) %>%
gather(key = "Variable", value = "Label")
colnames(RawData)
# First, let's try to figure out where that extra person came from (I had been expecting 360). If we have an extra normative person,
# we might consider dropping that 5-minute case. Let's first make sure there are no duplicate id's.
Dupes <- RawData %>%
count(id) %>%
filter(n > 1)
# No dupes. Let's check out the study ID to see where that extra person is.
sjmisc::frq(RawData$STUDY_ID, out = "v")
# Ok, that didn't really help, because I can't find the Study ID on the prolific website to match these numbers to. I could find out
# indirectly if I really wanted to by matching participant IDs to studies, but I actually don't think it's all that important. As you'll
# see later, the demographics that I collect in this instrument don't exactly line up with the prescreening demographics, so it's not
# that critical to achieve exact balance in N's across studies.
# Let's examine timings to confirm a relatively normal distribution.
# Note that the data should already be relatively clean coming in (including timings), since a certain amount of screening was done
# during data collection on Prolific. We do have a 5-minute case that I'm aware of, and I initially decided to keep. We we may re-assess.
ggplot(RawData, aes(Duration__in_seconds_/60)) + geom_histogram(binwidth=5) + scale_x_continuous(breaks = seq(0, 1000, by = 5))
ggplot(RawData, aes(Duration__in_seconds_/60)) + geom_histogram(binwidth=1) + scale_x_continuous(breaks = seq(0, 15, by = 1), limits = c(0,15))
# So, there is some positive skew, with a handful of cases taking longer than an hour. I am going to get rid of that 5-minute case, since I have
# an extra person anyway. We'll also get a sense of the summary stats of timing
describe(RawData$Duration__in_seconds_/60)
RawData <- RawData %>%
filter(Duration__in_seconds_ >= 360)
rm(Dupes)
# Demographics -------------------------------------------------------------------------------------------------------------------------------------
# Let's look at some basic descriptives for the data set, and get a sense of the demographic breakdown.
# Note that it's difficult to assess these numbers in isolation, because there are a lot of overlapping categories (i.e., the same person may
# share multiple specific demographic characteristics). Because of that fact, it won't be surprising to see HIGHER numbers than I explicitly
# sampled for.
Descriptives1 <- psych::describe(RawData)
sjmisc::frq(RawData$Gender, out = "v")    # A nice split between M/F
# I'm actually going to create a binary gender variable and dummy variables too, just to facilitate later analysis
RawData$GenderBinary <- case_when(RawData$Gender == 1 ~ 1, RawData$Gender == 2 ~ 2)
RawData$GenderFemale <- case_when(RawData$Gender == 2 ~ 1, TRUE ~ 0)
RawData$GenderNonBin <- case_when(RawData$Gender == 3 ~ 1, TRUE ~ 0)
sjmisc::frq(RawData$GenderBinary, out = "v")
sjmisc::frq(RawData$GenderFemale, out = "v")
sjmisc::frq(RawData$GenderNonBin, out = "v")
sjmisc::frq(RawData$Trans, out = "v")
CrossTable(as_factor(RawData$Gender), as_factor(RawData$Trans), format=c("SPSS")) # Total distinct n of 32 in non-normative gender categories.
sjmisc::frq(RawData$Agegroup, out = "v")  # Decent distribution of age.
ggplot(RawData, aes(Agegroup)) + geom_bar()
# Calculate age based on DOB responses (NOTE: apparently, Prolific considers DOB to be PII, so not everyone answered)
RawData  <-  RawData %>%
mutate(DOB = ifelse(DOB == "10/15/2020", NA, DOB))
RawData$DOB2 <- mdy(RawData$DOB)
RawData %>%
select(DOB2) %>%
arrange(DOB2) %>%
View()
RawData$Age  <-  as.numeric(difftime(Sys.Date(),RawData$DOB2, units = "weeks"))/52.25
sjmisc::descr(RawData, RawData$Age, out = "v")
# We'll create a mean-centered version as well (to assist interpretation)
RawData$AgeC <- scale(RawData$Age, scale = FALSE)
sjmisc::frq(RawData$Race, out = "v")      # I should have at least 60 "non-white" (but more is possible). I have 75, including mixed race.
sjmisc::frq(RawData$Ethnicity, out = "v") # But there are also 28 Latino/a/Hispanic (in prescreen, I had included this category
# in "non-white" because Latino/a was included in their single combined race/ethnicity question.)
CrossTable(as_factor(RawData$Race), as_factor(RawData$Ethnicity), format=c("SPSS"))
RawData %>%
group_by(Ethnicity) %>%
sjmisc::frq(Race, out = "v")
RawData %>%
filter(Race != 2 | Ethnicity == 1) %>%
count()                               # There's a distinct n of 92 that fall into either non-white or Latino/a/Hispanic.
sjmisc::frq(RawData$Disability, out = "v")  # An n of 58 for disability.
sjmisc::frq(RawData$Sexual, out = "v") # An n of 78 for Gay/Lesbian/Bisexual
sjmisc::frq(RawData$Income_Current, out = "v")
sjmisc::descr(RawData, RawData$Income_Current, out = "v")
CrossTable(as_factor(RawData$Income_Current), as_factor(RawData$HH_Size), format=c("SPSS"))
RawData %>%
group_by(HH_Size) %>%
sjmisc::frq(Income_Current, out = "v")
sjmisc::frq(RawData$Ed_You, out = "v")
sjmisc::frq(RawData$Ed_Mom, out = "v")
sjmisc::frq(RawData$Ed_Dad, out = "v")
CrossTable(as_factor(RawData$Agegroup), as_factor(RawData$Ed_You), format=c("SPSS"))
CrossTable(as_factor(RawData$Ed_Mom), as_factor(RawData$Ed_Dad), format=c("SPSS"))
sjmisc::frq(RawData$Political, out = "v")
sjmisc::descr(RawData, RawData$Political, out = "v")
# Just some tests of SES
LowSES <- RawData %>%
filter(Income_Current == 1 & Ed_Mom < 3 & Ed_Dad < 3)
LowSES <- RawData %>%
filter(Income_Current == 1 & HH_Size > 2)
LowSES <- RawData %>%
filter(Income_Current == 1 & HH_Size > 2 & Ed_Mom < 3 & Ed_Dad < 3)
LowSES <- RawData %>%
filter(Agegroup > 2 & Ed_You < 3 & Ed_Mom < 3 & Ed_Dad < 3)
# Combine a variation of the last two in OR conditions
LowSES <- RawData %>%
filter( (Income_Current == 1 & HH_Size > 1 & Ed_Mom < 3 & Ed_Dad < 3) | (Agegroup >2 & Ed_You < 3 & Ed_Mom < 3 & Ed_Dad < 3)
| (Income_Current == 1 & HH_Size > 2))
# ~ LowStatus --------------------------------------------------------------------------------------------------------------------------
# Just to get some idea of how many participants we have who have any potentially lower-status demographic characteristics, let's count.
# First, look at the "normative" sample. (I'm not sure how to replicate the SES question here, so the count may be slightly inflated)
Normative <- RawData %>%
select(id, Agegroup, Gender, Trans, Race, Ethnicity, Disability, Sexual, Income_Current, HH_Size, Ed_You, Ed_Mom, Ed_Dad) %>%
filter(Trans == 2 & Gender %in% (1:2) & Race == 2 & Ethnicity == 2 & Disability == 2 & Sexual == 1)
LowStatus <- RawData %>%
select(id, Agegroup, Gender, Trans, Race, Ethnicity, Disability, Sexual, Income_Current, HH_Size, Ed_You, Ed_Mom, Ed_Dad) %>%
filter(Trans == 1 | Gender == 3 | Race != 2 | Ethnicity == 1 | Disability == 1 | Sexual %in% (2:4) |
(Income_Current == 1 & HH_Size > 1 & Ed_Mom < 3 & Ed_Dad < 3) | (Agegroup >2 & Ed_You < 3 & Ed_Mom < 3 & Ed_Dad < 3)
| (Income_Current == 1 & HH_Size > 2))
# According to those criteria, 180 (exactly half) of the sample has at least one low-status characteristic.
# COVID and BLM Responses------------------------------------------------------------------------------------------------------------------------
# Descriptive summary of responses to the newly-added questions about COVID and the BLM protests/George Floyd killing.
sjmisc::frq(RawData$COVID_Contracted_1, out = "v")
sjmisc::frq(RawData$COVID_Contracted_2, out = "v")
sjmisc::frq(RawData$COVID_Contracted_3, out = "v")
sjmisc::frq(RawData$COVID_Contracted_4, out = "v")
sjmisc::frq(RawData$COVID_Contracted_5, out = "v")
# So, a total of 189 R's were affected by COVID contraction (or just over half)
sjmisc::frq(RawData$COVID_Died_1, out = "v")
sjmisc::frq(RawData$COVID_Died_2, out = "v")
sjmisc::frq(RawData$COVID_Died_3, out = "v")
sjmisc::frq(RawData$COVID_Died_4, out = "v")
# 36 R's knew someone who died (or 10% of the sample)
sjmisc::frq(RawData$COVID_Income_1, out = "v")
sjmisc::frq(RawData$COVID_Income_2, out = "v")
# A little less than a third of the sample reported significant income loss due to COVID.
sjmisc::frq(RawData$Floyd_1, out = "v")
sjmisc::frq(RawData$Floyd_2, out = "v")
sjmisc::frq(RawData$Floyd_3, out = "v")
sjmisc::frq(RawData$Floyd_4, out = "v")
sjmisc::frq(RawData$Floyd_5, out = "v")
sjmisc::frq(RawData$Floyd_6, out = "v")
sjmisc::frq(RawData$Floyd_7, out = "v")
sjmisc::frq(RawData$Floyd_8, out = "v")
# For the moment, I'm going to ignore the 6 "counter-protest" responses (response option #8), and instead create a sum score
# of BLM-type activism. We'll see later that this will be a useful corollary measure to "Critical Action," since
# this measure is much more specific and contextualized.
#
# We are also using this step to establish a new "Measures" dataset that will serve as the basis for further analysis.
# We'll create some new measures that will be useful. First, we'll create a political group categorical variable
# that we may end up using. We'll also create an income/household size ratio and an average of parental education
# that will both serve as SES indicators.
Measures <- RawData %>%
mutate_at(vars(contains("Floyd")), ~replace(., is.na(.), 0)) %>%
mutate(BLM_Activism = structure(rowSums(select(., Floyd_1:Floyd_6), na.rm=TRUE), label = "George Floyd/BLM Activism Composite (Sum)")) %>%
mutate(Political_Group = as_factor(structure(case_when(Political < 4 ~ "Liberal", Political > 4 ~ "Conservative"), label = "Political Group")),
Adj_Income = structure(Income_Current/HH_Size, label = "Income dvided by HH Size"),
Parent_Edu = structure(rowMeans(select(., Ed_Mom,Ed_Dad), na.rm=TRUE), label = "Average of both parents' education")) %>%
mutate(Adj_IncomeC = scale(Adj_Income, scale = FALSE),
Parent_EduC = scale(Parent_Edu, scale = FALSE))
ggplot(Measures, aes(Adj_Income)) + geom_histogram()
sjmisc::descr(Measures, Measures$Adj_Income, out = "v")
sjmisc::descr(Measures, Measures$Parent_Edu, out = "v")
# Note that for BLM Activism, I'm omitting the last two items. The last one was counter-protest. Item #7 is a little tougher
# ("examined my racism"). It's a good item, but if I want this scale to be distinguished from "critical reflection," then I think only
# retaining items that relate to taking specific social actions is appropriate.
sjmisc::frq(Measures$BLM_Activism, out = "v")
ggplot(Measures, aes(BLM_Activism)) + geom_histogram()
# Create Composite Measures----------------------------------------------------------------------------------------------------------------------
source(here("1_create_composite_measures.R"), echo = TRUE)
install.packages()
install.packages('pscl')
library(pscl)
data <- Measures %>%
filter(Race %in% c("Black or African-American","White or Caucasian") & !is.na(BLM_Activism)) %>%
mutate(Black = ifelse(Race == "Black or African-American", 1,0))
# To assess BLM Activism by race, keep in mind that the BLM measure is count data (with a lot of zeros)
# A t-test therefore is not appropriate. We will use "zero-inflated Poisson regression"
model.zi = zeroinfl(BLM_Activism ~ Race,
data = data,
dist = "poisson")
summary(model.zi)
# To assess BLM Activism by race, keep in mind that the BLM measure is count data (with a lot of zeros)
# A t-test therefore is not appropriate. We will use "zero-inflated Poisson regression"
ggplot(Measures, aes(BLM_Activism)) + geom_histogram()
model.zi = zeroinfl(BLM_Activism ~ Black,
data = data,
dist = "poisson")
summary(model.zi)
Measures %>%
group_by(Race) %>%
summarise(BLM_Mean = mean(BLM_Activism))
